{"version":3,"sources":["Square.js","Board.js","reportWebVitals.js","index.js"],"names":["Square","id","player","playerChange","takeTurn","useState","color","setColor","mark","setMark","disabled","setDisabled","onClick","e","console","log","style","background","Board","setPlayer","turn","setTurn","status","winStatus","winCombos","length","player2arr","filter","item","map","square","player1arr","player2win","winningCombo","Set","player1win","checkWin","set","subset","has","playerTurn","renderSquare","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA4BiBA,EAzBF,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,SACvC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,KAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAMA,OACE,wBAAQD,SAAUA,EAClBE,QAAW,SAAAC,GACTJ,EAAQN,KACRI,EAASL,GACTE,EAASF,EAAQD,GACjBU,GAAY,GACZG,QAAQC,IAAI,CAACd,QAEfe,MAAQ,CAAEC,WAdS,CAAC,OAAQ,MAAO,QAcAX,IARnC,SAUI,6BAfc,CAAE,IAAK,IAAK,KAeTE,QCyEZU,EA5FD,WACZ,MAA4Bb,mBAAS,GAArC,mBAAOH,EAAP,KAAeiB,EAAf,KACA,EAAwBd,mBAAS,IAAjC,mBAAOe,EAAP,KAAaC,EAAb,KAEIC,EAAM,4BAAwBpB,GAC9BqB,EAAS,kBAsBb,SAAmBH,GACjB,IAAMI,EAAY,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,IAEhF,GADAV,QAAQC,IAAI,cAAeK,GACf,MAARA,EAAc,MAAO,cACzB,GAAIA,EAAKK,OAAS,EAAG,MAAO,cAE5B,IAAIC,EAAaN,EAAKO,QAAO,SAACC,GAAU,GAAmB,GAAfA,EAAK1B,OAAa,OAAO0B,KACrEF,EAAaA,EAAWG,KAAI,SAACD,GAAD,OAAUA,EAAKE,UAC3ChB,QAAQC,IAAI,WAAYW,GAExB,IAAIK,EAAaX,EAAKO,QAAO,SAACC,GAAU,GAAmB,GAAfA,EAAK1B,OAAa,OAAO0B,KAIrE,GAHAG,EAAaA,EAAWF,KAAI,SAACD,GAAD,OAAUA,EAAKE,UAC3ChB,QAAQC,IAAI,WAAYgB,GAEN,MAAdL,GAAoC,MAAdK,EACxB,IAAIC,EAAaR,EAAUG,QAAO,SAACC,GAAS,OAAOK,EAAa,IAAIC,IAAIR,GAAa,IAAIQ,IAAIN,OACzFO,EAAaX,EAAUG,QAAO,SAACC,GAAS,OAAOK,EAAa,IAAIC,IAAIH,GAAa,IAAIG,IAAIN,OAG/F,GAAII,EAAWP,OAAS,EAAI,MAAO,gBACnC,GAAIU,EAAWV,OAAS,EAAI,MAAO,gBAEnC,MAAO,cA5CkBW,CAAShB,IAE9BjB,EAAe,WAMnB,OALc,GAAVD,GACFiB,EAAUjB,EAAS,GACL,GAAVA,GACJiB,EAAUjB,EAAS,GAEdA,GAGT,SAAS+B,EAAcI,EAAKC,GAAS,IAAD,gBAEjBA,GAFiB,IAElC,2BAAyB,CAAC,IAAjBV,EAAgB,QACvB,IAAKS,EAAIE,IAAIX,GACX,OAAO,GAJuB,8BAOlC,OAAO,EA8BT,IAAMxB,EAAW,SAACF,EAAQD,GACxB,IAAMuC,EAAa,CAACtC,OAAQA,EAAQ4B,OAAQ7B,GAC5CoB,EAAQ,GAAD,mBAAKD,GAAL,CAAWoB,KAClB1B,QAAQC,IAAR,qBAA0BK,KAKtBqB,EAAe,SAAUxC,GAC7B,OAAO,cAAC,EAAD,CAAQA,GAAIA,EAAIC,OAAQA,EAAQC,aAAcA,EAAcC,SAAUA,KAK/E,OACE,sBAAKsC,UAAU,aAAf,UACE,sBAAKA,UAAU,WAAf,UACGD,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKC,UAAU,WAAf,UACGD,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKC,UAAU,WAAf,UACGD,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKxC,GAAG,OAAR,UACE,oBAAIyC,UAAU,cAAd,SAA6BpB,IAC7B,oBAAIoB,UAAU,cAAd,SAA6BnB,WC9EtBoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c102f86.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport './Board.js';\r\n\r\nconst Square = ({id, player, playerChange, takeTurn}) => {               //you can also use props (without curly braces) as the argument and props.id in the header tag\r\n    const [color, setColor] = useState('')\r\n    const [mark, setMark] = useState('0')\r\n    const [disabled, setDisabled] = useState(false);\r\n    const colorPalette = ['gray', 'red', 'blue'];\r\n    const playerMarks = [ '-', 'X', 'O'];\r\n    \r\n  \r\n  \r\n    return(\r\n      <button disabled={disabled}\r\n      onClick = {e => {\r\n        setMark(playerChange());\r\n        setColor(player);\r\n        takeTurn(player, id);\r\n        setDisabled(true);\r\n        console.log({id});\r\n      }}\r\n      style= {{ background: colorPalette[color] }}\r\n      >\r\n          <h1>{playerMarks[mark]}</h1>\r\n      </button>\r\n    )\r\n  }\r\n\r\n  export default Square;","import './Board.css';\nimport Square from './Square.js';\nimport {useState} from 'react';\n\nconst Board = () => {\n  const [player, setPlayer] = useState(1);\n  const [turn, setTurn] = useState([]);\n  \n  let status = `This turn: Player ${player}`;\n  let winStatus = `Winner: ${checkWin(turn)}`\n  \n  const playerChange = () => {\n    if (player == 1){\n      setPlayer(player + 1)\n    } if (player == 2) {\n      setPlayer(player - 1)\n    };\n    return player;\n  }\n  \n  function winningCombo (set, subset) {\n    \n    for (let item of subset) {\n      if (!set.has(item)) {\n        return false;\n      } \n    }\n    return true;\n\n  };\n  \n  function checkWin (turn) {\n    const winCombos = [[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];\n    console.log(\"checkWins=>\", turn)\n    if (turn == null) return 'No wins yet';\n    if (turn.length < 5) return 'No wins yet';\n    \n    let player2arr = turn.filter((item) => {if (item.player == 2) return item;});\n    player2arr = player2arr.map((item) => item.square);\n    console.log('player0:', player2arr);\n    \n    let player1arr = turn.filter((item) => {if (item.player == 1) return item;});\n    player1arr = player1arr.map((item) => item.square);\n    console.log('player1:', player1arr);\n\n    if (player2arr != null && player1arr != null) {\n      var player2win = winCombos.filter((item)=> {return winningCombo(new Set(player2arr), new Set(item))});\n      var player1win = winCombos.filter((item)=> {return winningCombo(new Set(player1arr), new Set(item))});\n    };\n\n    if (player2win.length > 0) {return 'Player 2 wins'};\n    if (player1win.length > 0) {return 'Player 1 wins'};\n\n    return 'No wins yet';\n\n  };\n  \n  const takeTurn = (player, id) => {\n    const playerTurn = {player: player, square: id};\n    setTurn([...turn, playerTurn]);\n    console.log(`turn state ${turn}`);\n  };\n\n\n\n  const renderSquare = function (id) {\n    return <Square id={id} player={player} playerChange={playerChange} takeTurn={takeTurn}></Square>\n  };\n  \n  \n  \n  return (\n    <div className=\"game-board\">\n      <div className=\"grid-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"grid-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"grid-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <div id=\"info\">\n        <h1 className=\"game-status\">{status}</h1>\n        <h1 className=\"game-status\">{winStatus}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Board from './Board.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Board />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}